#!/bin/bash

# Function to check for errors
check_error() {
    if [ $? -ne 0 ]; then
        echo -e "[!] Error occurred during: $1" | lolcat
    fi
}

# Install lolcat for colorful output
echo -e "[+] Installing lolcat for colorful output..." | lolcat
sudo apt install -y lolcat
check_error "Installing lolcat"

# Updating and upgrading the system
echo -e "[+] Updating and upgrading the system..." | lolcat
sudo apt update -y && sudo apt upgrade -y && sudo apt dist-upgrade -y
check_error "System update"

# Installing essential packages for ethical hacking and other utilities
echo -e "[+] Installing necessary tools and dependencies..." | lolcat
sudo apt install -y git wget curl nmap python3 python3-pip gedit mousepad \
                    build-essential net-tools aircrack-ng sqlmap \
                    metasploit-framework john hydra nikto gobuster \
                    seclists dirb zmap tmux burpsuite subfinder lolcat
check_error "Tool installation"

# Cloning GitHub repositories into the current directory
echo -e "[+] Cloning required GitHub repositories..." | lolcat
REPOS=(
  "https://github.com/thebugbounter/HACK-CAMERA.git"
  "https://github.com/thebugbounter/XERXES.git"
  "https://github.com/thebugbounter/CamPhish.git"
  "https://github.com/thebugbounter/zphisher.git"
  "https://github.com/thebugbounter/ErisPhisher.git"
  "https://github.com/rapid7/metasploit-framework.git"  # Metasploit Framework
  "https://github.com/zaproxy/zap-core-help.git"      # OWASP ZAP
  "https://github.com/zeek/zeek.git"                     # Zeek Network Security Monitor
)

for repo in "${REPOS[@]}"; do
  repo_name=$(basename "$repo" .git)
  if [ -d "$repo_name" ]; then
    echo -e "[+] $repo_name already exists, skipping..." | lolcat
  else
    git clone "$repo" 2>/dev/null
    check_error "Cloning $repo"
  fi
done

# Making all .sh scripts and XERXES executable
echo -e "[+] Giving executable permissions to .sh files and XERXES..." | lolcat
find . -type f -iname "*.sh" -exec chmod +x {} \; 2>/dev/null
chmod +x ./XERXES/xerxes 2>/dev/null

# Cloning ShellScripting outside of Tools directory
echo -e "[+] Cloning ShellScripting repository..." | lolcat
shell_scripting_repo="https://github.com/thebugbounter/ShellScripting.git"
shell_scripting_dir="./ShellScripting"

if [ -d "$shell_scripting_dir" ]; then
    echo -e "[+] ShellScripting already exists, skipping..." | lolcat
else
    git clone "$shell_scripting_repo" 2>/dev/null
    check_error "Cloning ShellScripting"
fi

# Downloading SecLists if not already present
echo -e "[+] Downloading SecLists..." | lolcat
if [ ! -d "/usr/share/seclists" ]; then
    sudo git clone https://github.com/danielmiessler/SecLists.git /usr/share/seclists 2>/dev/null
    check_error "Downloading SecLists"
else
    echo -e "[+] SecLists already exists, skipping download." | lolcat
fi

# Installing additional Python packages
echo -e "[+] Installing Python packages..." | lolcat
pip3 install --upgrade pip 2>/dev/null
pip3 install requests bs4 2>/dev/null
check_error "Installing Python packages"

# Final system cleanup
echo -e "[+] Cleaning up unnecessary packages..." | lolcat
sudo apt autoremove -y && sudo apt clean

# Final setup info
echo -e "[+] Setup Complete! Your system is ready for ethical hacking." | lolcat
